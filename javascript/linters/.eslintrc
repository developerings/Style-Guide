{
  "env": {                           // http://eslint.org/docs/user-guide/configuring.html#specifying-environments
    "browser": true,                 // browser global variables
    "node": true                     // Node.js global variables and Node.js-specific rules
  },
  "rules": {
    "strict": [2, "never"],          // http://eslint.org/docs/rules/strict

/**
 * Variables
 */
    "no-shadow": 2,                  // http://eslint.org/docs/rules/no-shadow
    "no-shadow-restricted-names": 2, // http://eslint.org/docs/rules/no-shadow-restricted-names
    "no-unused-vars": [2, {          // http://eslint.org/docs/rules/no-unused-vars
      "vars": "local",               // allows global vars to go unused
      "args": "after-used"           // arguments can go unused if they are not the first argument
    }],
    "no-use-before-define": [2, "nofunc"], // http://eslint.org/docs/rules/no-use-before-define       

/**
 * Possible errors
 */
    "comma-dangle": 2,               // http://eslint.org/docs/rules/comma-dangle
    "no-cond-assign": [2, "always"], // http://eslint.org/docs/rules/no-cond-assign --  if (user.jobTitle = "manager") {}
    "no-console": 1,                 // http://eslint.org/docs/rules/no-console
    "no-debugger": 1,                // http://eslint.org/docs/rules/no-debugger
    "no-alert": 1,                   // http://eslint.org/docs/rules/no-alert
    "no-constant-condition": 1,      // http://eslint.org/docs/rules/no-constant-condition  if (true)
    "no-dupe-keys": 2,               // http://eslint.org/docs/rules/no-dupe-keys -- the same key multiple times in an object
    "no-duplicate-case": 2,          // http://eslint.org/docs/rules/no-duplicate-case -- same case multiple times in a switch statement
    "no-empty": 2,                   // http://eslint.org/docs/rules/no-empty -- an empty block
    "no-ex-assign": 2,               // http://eslint.org/docs/rules/no-ex-assign -- don't allow assigning an exeption parameter inside of the catch statement
    "no-extra-boolean-cast": 0,      // http://eslint.org/docs/rules/no-extra-boolean-cast -- don't allow casting in places where the cast already happens (if statements)
    "no-extra-semi": 2,              // http://eslint.org/docs/rules/no-extra-semi -- errors when a semicolon is used unnecessarily
    "no-func-assign": 2,             // http://eslint.org/docs/rules/no-func-assign -- don't allow for reassigning a function declaration
    "no-inner-declarations": 2,      // http://eslint.org/docs/rules/no-inner-declarations -- don't allow declarations inside of blocks
    "no-invalid-regexp": 2,          // http://eslint.org/docs/rules/no-invalid-regexp
    "no-irregular-whitespace": 2,    // http://eslint.org/docs/rules/no-irregular-whitespace
    "no-obj-calls": 2,               // http://eslint.org/docs/rules/no-obj-calls
    "no-reserved-keys": 2,           // http://eslint.org/docs/rules/no-reserved-keys
    "no-sparse-arrays": 2,           // http://eslint.org/docs/rules/no-sparse-arrays -- don't allow arrays like [,,,]
    "no-unreachable": 2,             // http://eslint.org/docs/rules/no-unreachable -- error when code is unreachable
    "use-isnan": 2,                  // http://eslint.org/docs/rules/use-isnan -- error when a var is compared to NaN. Should use isNaN function
    "block-scoped-var": 2,           // http://eslint.org/docs/rules/block-scoped-var -- error when var is used outside of block it was created in

/**
 * Best practices
 */
    "consistent-return": 2,          // http://eslint.org/docs/rules/consistent-return -- error when a function returns two different types, depending on code path
    "curly": 2,                      // http://eslint.org/docs/rules/curly -- require curly braces around blocks
    "default-case": 2,               // http://eslint.org/docs/rules/default-case -- require default case
    "dot-notation": [2, {            // http://eslint.org/docs/rules/dot-notation -- prefer dot notation. Only allows bracket notation if function is passed in (doesn't allow theObject["someProp"])
      "allowKeywords": true
    }],
    "eqeqeq": 2,                     // http://eslint.org/docs/rules/eqeqeq -- require ===
    "guard-for-in": 2,               // http://eslint.org/docs/rules/guard-for-in -- require hasOwnProperty checking inside of for in
    "no-caller": 2,                  // http://eslint.org/docs/rules/no-caller -- error if using arguments.callee
    "no-else-return": 2,             // http://eslint.org/docs/rules/no-else-return -- else return is unnecessary. Just return below the if
    "no-eq-null": 2,                 // http://eslint.org/docs/rules/no-eq-null -- require === for null comparisons
    "no-eval": 2,                    // http://eslint.org/docs/rules/no-eval -- don't use eval
    "no-extend-native": 2,           // http://eslint.org/docs/rules/no-extend-native -- don't allow extending native objects
    "no-extra-bind": 2,              // http://eslint.org/docs/rules/no-extra-bind -- don't allow .bind at end of function if this is never used
    "no-fallthrough": 2,             // http://eslint.org/docs/rules/no-fallthrough -- don't allow fallthrough in switch statements
    "no-floating-decimal": 2,        // http://eslint.org/docs/rules/no-floating-decimal -- require 0 before floating point decimals
    "no-implied-eval": 2,            // http://eslint.org/docs/rules/no-implied-eval
    "no-lone-blocks": 2,             // http://eslint.org/docs/rules/no-lone-blocks
    "no-loop-func": 2,               // http://eslint.org/docs/rules/no-loop-func -- don't allow function creation inside a loop
    "no-multi-str": 2,               // http://eslint.org/docs/rules/no-multi-str -- don't allow multiline strings (using \ instead of +)
    "no-native-reassign": 2,         // http://eslint.org/docs/rules/no-native-reassign -- don't allow reassigning native objects
    "no-new": 2,                     // http://eslint.org/docs/rules/no-new -- only allow new if the object is assigned to a function
    "no-new-func": 2,                // http://eslint.org/docs/rules/no-new-func -- don't allow new Function()
    "no-new-wrappers": 2,            // http://eslint.org/docs/rules/no-new-wrappers -- don't use new String(), new Boolean(), etc.
    "no-octal": 2,                   // http://eslint.org/docs/rules/no-octal -- don't allow octal values
    "no-octal-escape": 2,            // http://eslint.org/docs/rules/no-octal-escape
    "no-param-reassign": 2,          // http://eslint.org/docs/rules/no-param-reassign -- don't allow reassigning a parameter. It's confusing!
    "no-proto": 2,                   // http://eslint.org/docs/rules/no-proto -- don't allow use of __proto__
    "no-redeclare": 2,               // http://eslint.org/docs/rules/no-redeclare -- don't allow declaring the same variable twice
    "no-return-assign": 2,           // http://eslint.org/docs/rules/no-return-assign -- don't allow assignment inside of a return statement
    "no-script-url": 2,              // http://eslint.org/docs/rules/no-script-url
    "no-self-compare": 2,            // http://eslint.org/docs/rules/no-self-compare -- don't allow comparing a var to itself
    "no-sequences": 2,               // http://eslint.org/docs/rules/no-sequences -- 
    "no-throw-literal": 2,           // http://eslint.org/docs/rules/no-throw-literal -- don't allow throwing a literal. Need to throw error object
    "no-with": 2,                    // http://eslint.org/docs/rules/no-with -- don't allow with statement
    "radix": 2,                      // http://eslint.org/docs/rules/radix -- require the 10 as second parameter of parseInt to avoid incorrect values from leading 0
    "vars-on-top": 2,                // http://eslint.org/docs/rules/vars-on-top -- don't allow vars anywhere but the top of a function
    "wrap-iife": [2, "any"],         // http://eslint.org/docs/rules/wrap-iife -- require wrapping iife in parentheses
    "yoda": 2,                       // http://eslint.org/docs/rules/yoda -- don't allow yoda expressions  -- if (5 = someVar) {}

/**
 * Style
 */
    "indent": [2, 4],                // http://eslint.org/docs/rules/indent -- indent 4 spaces
    "brace-style": [2, "1tbs"],      // http://eslint.org/docs/rules/brace-style -- opening brace on same line
    "quotes": [
      2, "single", "avoid-escape"    // http://eslint.org/docs/rules/quotes -- single quotes
    ],
    "camelcase": [2, {               // http://eslint.org/docs/rules/camelcase -- favor camel case. don't use under_score_vars
      "properties": "never"
    }],
    "comma-spacing": [2, {           // http://eslint.org/docs/rules/comma-spacing -- commas get a space after then, but not before
      "before": false,
      "after": true
    }],
    "comma-style": [2, "last"],      // http://eslint.org/docs/rules/comma-style -- commas go at the end of the line, not at the beginning
    "eol-last": 2,                   // http://eslint.org/docs/rules/eol-last -- end file with single newline
    "func-names": 1,                 // http://eslint.org/docs/rules/func-names -- warn when a function expression isn't named...which can aid in debugging (apparently)
    "key-spacing": [2, {             // http://eslint.org/docs/rules/key-spacing -- in object literal creation, no space before colon and one space after colon
        "beforeColon": false,
        "afterColon": true
    }],
    "new-cap": [2, {                 // http://eslint.org/docs/rules/new-cap -- functions that are constructors must start with a capital
      "newIsCap": true
    }],
    "no-multiple-empty-lines": [2, { // http://eslint.org/docs/rules/no-multiple-empty-lines -- allow 2 empty lines max
      "max": 2
    }],
    "no-nested-ternary": 2,          // http://eslint.org/docs/rules/no-nested-ternary
    "no-new-object": 2,              // http://eslint.org/docs/rules/no-new-object -- don't use new Object()
    "no-spaced-func": 2,             // http://eslint.org/docs/rules/no-spaced-func -- no spaces in function call -- fn(), not fn ()
    "no-trailing-spaces": 2,         // http://eslint.org/docs/rules/no-trailing-spaces -- no trailing spaces at end of line
    "no-wrap-func": 2,               // http://eslint.org/docs/rules/no-wrap-func -- don't wrap a function, unless it's an IIFE
    "no-underscore-dangle": 0,       // http://eslint.org/docs/rules/no-underscore-dangle -- allow use of "dangling underscores" such as _varName
    "one-var": [2, "always"],        // http://eslint.org/docs/rules/one-var -- use one var at the top of the function
    "padded-blocks": [2, "never"],   // http://eslint.org/docs/rules/padded-blocks -- padding inside of blocks at beginning and end not allowed
    "semi": [2, "always"],           // http://eslint.org/docs/rules/semi -- require semicolons
    "semi-spacing": [2, {            // http://eslint.org/docs/rules/semi-spacing -- require a space after semicolons, in the case of multiple statements on a single line
      "before": false,
      "after": true
    }],
    "space-after-keywords": 2,       // http://eslint.org/docs/rules/space-after-keywords -- space after keywords -- if (true)  or  switch (varName)
    "space-before-blocks": 2,        // http://eslint.org/docs/rules/space-before-blocks -- space require before opening curly brace of a block
    "space-before-function-paren": [2, "never"], // http://eslint.org/docs/rules/space-before-function-paren -- no space before function parens -- fn(), not fn ()
    "space-infix-ops": 2,            // http://eslint.org/docs/rules/space-infix-ops -- spaces around infix operators -- 5 + 4 = 10   not    5+4=10
    "space-return-throw-case": 2,    // http://eslint.org/docs/rules/space-return-throw-case -- require space after return, throw, case keywords
    "spaced-comment": 2,            // http://eslint.org/docs/rules/spaced-comment -- require a space between the comment character and the next character -- // this is valid -- //this is not
  }
}
