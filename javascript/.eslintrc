{                                   // FULL LIST OF RULES -- http://eslint.org/docs/rules/

	"env": {                           // http://eslint.org/docs/user-guide/configuring.html#specifying-environments
		"browser": true                  // browser global variables
	},
	"rules": {
		"strict": [2, "global"],          // http://eslint.org/docs/rules/strict -- controls location of Use Strict Directives

/**
 * Variables
 */
		"no-shadow": 2,                  // http://eslint.org/docs/rules/no-shadow -- disallow declaration of variables already declared in the outer scope
		"no-shadow-restricted-names": 2, // http://eslint.org/docs/rules/no-shadow-restricted-names -- disallow shadowing of names such as arguments
		"no-unused-vars": [2, {          // http://eslint.org/docs/rules/no-unused-vars -- disallow declaration of variables that are not used in the code (recommended)
			"vars": "local",               // allows global vars to go unused
			"args": "none"           // arguments can go unused if they are not the first argument
		}],
		"no-use-before-define": [2, "nofunc"], // http://eslint.org/docs/rules/no-use-before-define -- disallow use of variables before they are defined

/**
 * Possible errors
 */
		"comma-dangle": 2,               // http://eslint.org/docs/rules/comma-dangle -- disallow or enforce trailing commas (recommended)
		"no-cond-assign": [2, "always"], // http://eslint.org/docs/rules/no-cond-assign -- disallow assignment in conditional expressions (recommended)
		"no-console": 0,                 // http://eslint.org/docs/rules/no-console -- disallow use of console in the node environment (recommended)
		"no-debugger": 1,                // http://eslint.org/docs/rules/no-debugger -- disallow use of debugger (recommended)
		"no-alert": 1,                   // http://eslint.org/docs/rules/no-alert -- disallow the use of alert, confirm, and prompt
		"no-constant-condition": 1,      // http://eslint.org/docs/rules/no-constant-condition -- disallow use of constant expressions in conditions (recommended) -- if (true)
		"no-dupe-keys": 2,               // http://eslint.org/docs/rules/no-dupe-keys -- disallow duplicate keys when creating object literals (recommended)
		"no-duplicate-case": 2,          // http://eslint.org/docs/rules/no-duplicate-case -- disallow a duplicate case label. (recommended)
		"no-empty": 2,                   // http://eslint.org/docs/rules/no-empty -- disallow empty statements (recommended)
		"no-ex-assign": 2,               // http://eslint.org/docs/rules/no-ex-assign -- disallow assigning to the exception in a catch block (recommended)
		"no-extra-boolean-cast": 0,      // http://eslint.org/docs/rules/no-extra-boolean-cast -- disallow double-negation boolean casts in a boolean context (recommended)
		"no-extra-parens": [2, "functions"],  // http://eslint.org/docs/rules/no-extra-parens -- disallow unnecessary parentheses around functions
		"no-extra-semi": 2,              // http://eslint.org/docs/rules/no-extra-semi -- disallow unnecessary semicolons (recommended)
		"no-func-assign": 2,             // http://eslint.org/docs/rules/no-func-assign -- disallow overwriting functions written as function declarations (recommended)
		"no-inner-declarations": 2,      // http://eslint.org/docs/rules/no-inner-declarations -- disallow function or variable declarations in nested blocks (recommended)
		"no-invalid-regexp": 2,          // http://eslint.org/docs/rules/no-invalid-regexp -- disallow invalid regular expression strings in the RegExp constructor (recommended)
		"no-irregular-whitespace": 2,    // http://eslint.org/docs/rules/no-irregular-whitespace -- disallow irregular whitespace outside of strings and comments (recommended)
		"no-obj-calls": 2,               // http://eslint.org/docs/rules/no-obj-calls -- disallow the use of object properties of the global object (Math and JSON) as functions (recommended)
		"quote-props": [2, "as-needed"],           	 // http://eslint.org/docs/rules/quote-props --
		"no-sparse-arrays": 2,           // http://eslint.org/docs/rules/no-sparse-arrays -- disallow sparse arrays (recommended) -- [,,,]
		"no-unreachable": 2,             // http://eslint.org/docs/rules/no-unreachable -- disallow unreachable statements after a return, throw, continue, or break statement (recommended)
		"use-isnan": 2,                  // http://eslint.org/docs/rules/use-isnan -- disallow comparisons with the value NaN (recommended)
		"block-scoped-var": 2,           // http://eslint.org/docs/rules/block-scoped-var -- treat var statements as if they were block scoped

/**
 * Best practices
 */
		"consistent-return": 2,          // http://eslint.org/docs/rules/consistent-return -- require return statements to either always or never specify values
		"curly": 2,                      // http://eslint.org/docs/rules/curly -- require curly braces around blocks
		"default-case": 2,               // http://eslint.org/docs/rules/default-case -- require default case in switch statements
		"dot-notation": [2, {            // http://eslint.org/docs/rules/dot-notation -- prefer dot notation. Only allows bracket notation if function is passed in (doesn't allow theObject["someProp"])
			"allowKeywords": false         // Do not allow keywords as object keys
		}],
		"eqeqeq": 2,                     // http://eslint.org/docs/rules/eqeqeq -- require the use of === and !==
		"guard-for-in": 0,               // http://eslint.org/docs/rules/guard-for-in -- do not make sure for-in loops have an if statement
		"no-caller": 2,                  // http://eslint.org/docs/rules/no-caller -- disallow use of arguments.caller or arguments.callee
		"no-else-return": 2,             // http://eslint.org/docs/rules/no-else-return -- disallow else after a return in an if
		"no-eq-null": 0,                 // http://eslint.org/docs/rules/no-eq-null -- allow comparisons to null without a type-checking operator
		"no-eval": 2,                    // http://eslint.org/docs/rules/no-eval -- disallow use of eval()
		"no-extend-native": 2,           // http://eslint.org/docs/rules/no-extend-native -- disallow adding to native types
		"no-extra-bind": 2,              // http://eslint.org/docs/rules/no-extra-bind -- disallow unnecessary function binding
		"no-fallthrough": 2,             // http://eslint.org/docs/rules/no-fallthrough -- disallow fallthrough of case statements (recommended)
		"no-floating-decimal": 2,        // http://eslint.org/docs/rules/no-floating-decimal -- disallow the use of leading or trailing decimal points in numeric literals
		"no-implied-eval": 2,            // http://eslint.org/docs/rules/no-implied-eval -- disallow use of eval()-like methods
		"no-lone-blocks": 2,             // http://eslint.org/docs/rules/no-lone-blocks -- disallow unnecessary nested blocks
		"no-loop-func": 2,               // http://eslint.org/docs/rules/no-loop-func -- disallow creation of functions within loops
		"no-multi-str": 2,               // http://eslint.org/docs/rules/no-multi-str -- disallow use of multiline strings
		"no-native-reassign": 2,         // http://eslint.org/docs/rules/no-native-reassign -- disallow reassignments of native objects
		"no-new": 2,                     // http://eslint.org/docs/rules/no-new -- disallow use of the new operator when not part of an assignment or comparison
		"no-new-func": 2,                // http://eslint.org/docs/rules/no-new-func -- disallow use of new operator for Function object
		"no-new-wrappers": 2,            // http://eslint.org/docs/rules/no-new-wrappers -- disallows creating new instances of String,Number, and Boolean
		"no-octal": 2,                   // http://eslint.org/docs/rules/no-octal -- disallow use of octal literals (recommended)
		"no-octal-escape": 2,            // http://eslint.org/docs/rules/no-octal-escape -- disallow use of octal escape sequences in string literals, such as var foo = "Copyright \251";
		"no-param-reassign": 0,          // http://eslint.org/docs/rules/no-param-reassign -- disallow reassignment of function parameters
		"no-proto": 2,                   // http://eslint.org/docs/rules/no-proto -- disallow usage of __proto__ property
		"no-redeclare": 2,               // http://eslint.org/docs/rules/no-redeclare -- disallow declaring the same variable more than once (recommended)
		"no-return-assign": 2,           // http://eslint.org/docs/rules/no-return-assign -- disallow use of assignment in return statement
		"no-script-url": 2,              // http://eslint.org/docs/rules/no-script-url -- disallow use of javascript: urls
		"no-self-compare": 2,            // http://eslint.org/docs/rules/no-self-compare -- disallow comparisons where both sides are exactly the same (same var)
		"no-sequences": 2,               // http://eslint.org/docs/rules/no-sequences -- disallow use of the comma operator
		"no-throw-literal": 2,           // http://eslint.org/docs/rules/no-throw-literal -- restrict what can be thrown as an exception
		"no-with": 2,                    // http://eslint.org/docs/rules/no-with -- disallow use of the with statement
		"radix": 2,                      // http://eslint.org/docs/rules/radix -- require use of the second argument for parseInt()
		"vars-on-top": 2,                // http://eslint.org/docs/rules/vars-on-top -- require declaration of all vars at the top of their containing scope
		"wrap-iife": [2, "any"],         // http://eslint.org/docs/rules/wrap-iife -- require immediate function invocation to be wrapped in parentheses
		"yoda": 2,                       // http://eslint.org/docs/rules/yoda -- disallow Yoda conditions  -- if (5 = someVar) {}

/**
 * Style
 */
		"indent": [2, "tab", {           // http://eslint.org/docs/rules/indent -- indent with tabs
			"SwitchCase": 1
		}],
		"brace-style": [2, "1tbs"],      // http://eslint.org/docs/rules/brace-style -- opening brace on same line
		"quotes": [
			2, "single", "avoid-escape"    // http://eslint.org/docs/rules/quotes -- single quotes
		],
		"camelcase": 2,               // http://eslint.org/docs/rules/camelcase -- favor camel case. don't use under_score_vars
		"comma-spacing": [2, {           // http://eslint.org/docs/rules/comma-spacing -- commas get a space after them, but not before
			"before": false,
			"after": true
		}],
		"comma-style": [2, "last"],      // http://eslint.org/docs/rules/comma-style -- commas go at the end of the line, not at the beginning
		"eol-last": 2,                   // http://eslint.org/docs/rules/eol-last -- end file with single newline
		"func-names": 0,                 // http://eslint.org/docs/rules/func-names -- do not force function expressions to be named
		"key-spacing": [2, {             // http://eslint.org/docs/rules/key-spacing -- in object literal creation, no space before colon and one space after colon
				"beforeColon": false,
				"afterColon": true
		}],
		"new-cap": [2, {                 // http://eslint.org/docs/rules/new-cap -- functions that are constructors must start with a capital
			"newIsCap": true
		}],
		"no-multiple-empty-lines": [2, { // http://eslint.org/docs/rules/no-multiple-empty-lines -- allow 2 empty lines max
			"max": 2
		}],
		"no-nested-ternary": 2,          // http://eslint.org/docs/rules/no-nested-ternary -- disallow nested ternary expressions
		"no-new-object": 2,              // http://eslint.org/docs/rules/no-new-object -- disallow the use of the Object constructor
		"no-spaced-func": 2,             // http://eslint.org/docs/rules/no-spaced-func -- disallow space between function identifier and application -- fn(), not fn ()
		"no-trailing-spaces": 2,         // http://eslint.org/docs/rules/no-trailing-spaces -- no trailing spaces at end of line
		"no-underscore-dangle": 0,       // http://eslint.org/docs/rules/no-underscore-dangle -- allow dangling underscores in identifiers -- such as _varName
		"one-var": [2, "never"],         // http://eslint.org/docs/rules/one-var -- disallow one variable declaration per function
		"padded-blocks": 0,   			 // http://eslint.org/docs/rules/padded-blocks -- enforce padding within blocks
		"semi": [2, "always"],           // http://eslint.org/docs/rules/semi -- require use of semicolons instead of ASI
		"semi-spacing": [2, {            // http://eslint.org/docs/rules/semi-spacing -- enforce spacing before and after semicolons
			"before": false,
			"after": true
		}],
		"space-after-keywords": 2,       // http://eslint.org/docs/rules/space-after-keywords -- require a space after certain keywords -- if (true)  or  switch (varName)
		"space-before-blocks": 2,        // http://eslint.org/docs/rules/space-before-blocks -- require a space before opening curly brace of a block
		"space-before-function-paren": [2, "never"], // http://eslint.org/docs/rules/space-before-function-paren -- no space before function parens -- fn(), not fn ()
		"space-infix-ops": 2,            // http://eslint.org/docs/rules/space-infix-ops -- require spaces around operators -- 5 + 4 = 10   not    5+4=10
		"space-return-throw-case": 2,    // http://eslint.org/docs/rules/space-return-throw-case -- require a space after return, throw, and case
		"spaced-comment": 0,            // http://eslint.org/docs/rules/spaced-comment -- require a space immediately following the // or /* in a comment -- // this is valid -- //this is not

		"consistent-this": 0           // http://eslint.org/docs/rules/consistent-this -- enforce consistent naming when capturing the current execution context
	}
}
